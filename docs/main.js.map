{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/course-dialog/course-dialog.component.ts","./src/app/course-dialog/course-dialog.component.html","./src/app/course/course.component.ts","./src/app/course/course.component.html","./src/app/courses-card-list/courses-card-list.component.ts","./src/app/courses-card-list/courses-card-list.component.html","./src/app/directives/app-shell-norender.directive.ts","./src/app/directives/app-shell-render.directive.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/course.resolver.ts","./src/app/services/courses.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {\n  concat,\n  fromEvent,\n  interval,\n  noop,\n  observable,\n  Observable,\n  of,\n  timer,\n  merge,\n  Subject,\n  BehaviorSubject,\n  AsyncSubject,\n  ReplaySubject, from\n} from 'rxjs';\nimport {delayWhen, filter, map, take, timeout} from 'rxjs/operators';\n\n\n\n@Component({\n    selector: 'about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n    ngOnInit() {\n\n\n    }\n\n\n  run() {\n\n\n\n  }\n\n\n}\n\n\n\n\n\n\n","\n\n<div class=\"not-found\">\n\n    <h1>Angular Universal In Depth</h1>\n\n    <img class=\"course-image mat-elevation-z10\"\n         src=\"https://angular-university.s3-us-west-1.amazonaws.com/course-images/angular-universal-course.jpg\">\n\n    <h2>About this course</h2>\n    <p>Use Angular on the server too! Learn Angular Server-Side Rendering.</p>\n\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {CourseComponent} from \"./course/course.component\";\nimport {CourseResolver} from \"./services/course.resolver\";\nimport {AboutComponent} from './about/about.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n\n  },\n  {\n    path: 'about',\n    component: AboutComponent\n  },\n  {\n    path: 'courses/:id',\n    component: CourseComponent,\n    resolve: {\n      course: CourseResolver\n    }\n  },\n  {\n    path: \"**\",\n    redirectTo: '/'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    relativeLinkResolution: 'legacy'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n\n}\n","<mat-sidenav-container fullscreen>\n\n  <mat-sidenav #start (click)=\"start.close()\">\n\n    <mat-nav-list>\n\n      <a mat-list-item routerLink=\"/\">\n        <mat-icon>library_books</mat-icon>\n        <span>Courses</span>\n      </a>\n\n      <a mat-list-item routerLink=\"/about\">\n        <span>About</span>\n      </a>\n\n      <a mat-list-item>\n        <mat-icon>person_add</mat-icon>\n        <span>Register</span>\n      </a>\n\n      <a mat-list-item>\n        <mat-icon>account_circle</mat-icon>\n        <span>Login</span>\n      </a>\n\n    </mat-nav-list>\n\n  </mat-sidenav>\n\n  <mat-toolbar color=\"primary\">\n    <button mat-icon-button (click)=\"start.open()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n  </mat-toolbar>\n\n  <router-outlet></router-outlet>\n\n    <div class=\"spinner-container\" *appShellRender>\n\n        <mat-spinner></mat-spinner>\n\n    </div>\n\n</mat-sidenav-container>\n","import {BrowserModule, BrowserTransferStateModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button'\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport { HomeComponent } from './home/home.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { CoursesCardListComponent } from './courses-card-list/courses-card-list.component';\nimport {CourseComponent} from \"./course/course.component\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport {CoursesService} from \"./services/courses.service\";\nimport {CourseResolver} from \"./services/course.resolver\";\nimport { CourseDialogComponent } from './course-dialog/course-dialog.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { HttpClientModule} from '@angular/common/http';\nimport {AboutComponent} from './about/about.component';\nimport {AppShellRenderDirective} from \"./directives/app-shell-render.directive\";\nimport {AppShellNoRenderDirective} from \"./directives/app-shell-norender.directive\";\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CourseComponent,\n    CoursesCardListComponent,\n    CourseDialogComponent,\n    AboutComponent,\n    AppShellRenderDirective,\n    AppShellNoRenderDirective\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    BrowserTransferStateModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatTabsModule,\n    MatSidenavModule,\n    MatListModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    AppRoutingModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    CoursesService,\n    CourseResolver\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, Inject, OnInit, ViewEncapsulation} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport {Course} from \"../model/course\";\nimport {FormBuilder, Validators, FormGroup} from \"@angular/forms\";\n\n@Component({\n    selector: 'course-dialog',\n    templateUrl: './course-dialog.component.html',\n    styleUrls: ['./course-dialog.component.css']\n})\nexport class CourseDialogComponent implements OnInit {\n\n    form: FormGroup;\n    description:string;\n\n    constructor(\n        private fb: FormBuilder,\n        private dialogRef: MatDialogRef<CourseDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) {description,longDescription,\n            category}:Course ) {\n\n        this.description = description;\n\n\n        this.form = fb.group({\n            description: [description, Validators.required],\n            category: [category, Validators.required],\n            longDescription: [longDescription,Validators.required]\n        });\n\n    }\n\n    ngOnInit() {\n\n    }\n\n\n    save() {\n        this.dialogRef.close(this.form.value);\n    }\n\n    close() {\n        this.dialogRef.close();\n    }\n\n}\n","\n<h2 mat-dialog-title>{{description}}</h2>\n\n\n<mat-dialog-content [formGroup]=\"form\">\n\n    <mat-form-field>\n\n        <input matInput\n                placeholder=\"Course Description\"\n               formControlName=\"description\">\n\n    </mat-form-field>\n\n    <mat-form-field>\n\n        <mat-select placeholder=\"Select category\"\n            formControlName=\"category\">\n\n            <mat-option value=\"BEGINNER\">\n                Beginner</mat-option>\n            <mat-option value=\"INTERMEDIATE\">\n                Intermediate</mat-option>\n            <mat-option value=\"ADVANCED\">\n                Advanced</mat-option>\n\n        </mat-select>\n\n    </mat-form-field>\n\n    <mat-form-field>\n\n        <textarea matInput placeholder=\"Description\"\n            formControlName=\"longDescription\">\n\n        </textarea>\n\n    </mat-form-field>\n\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n\n    <button class=\"mat-raised-button\"\n            (click)=\"close()\">\n        Close\n    </button>\n\n    <button class=\"mat-raised-button mat-primary\"\n            (click)=\"save()\">\n        Save\n    </button>\n\n</mat-dialog-actions>\n\n\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {Course} from '../model/course';\nimport {CoursesService} from '../services/courses.service';\nimport {debounceTime, distinctUntilChanged, startWith, tap, delay} from 'rxjs/operators';\nimport {merge, fromEvent} from 'rxjs';\nimport {Lesson} from '../model/lesson';\nimport {Meta, Title} from '@angular/platform-browser';\n\n\n@Component({\n    selector: 'course',\n    templateUrl: './course.component.html',\n    styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n    course:Course;\n\n    dataSource: MatTableDataSource<Lesson>;\n\n    displayedColumns= [\"seqNo\", \"description\", \"duration\"];\n\n\n    constructor(\n        private route: ActivatedRoute,\n        private coursesService: CoursesService,\n        private title: Title,\n        private meta: Meta) {}\n\n    ngOnInit() {\n\n        this.course = this.route.snapshot.data[\"course\"];\n\n        this.title.setTitle(this.course.description);\n\n        this.meta.updateTag({name: \"description\", content: this.course.longDescription});\n\n        this.meta.addTag({name: 'twitter:card', content: 'summary'});\n        this.meta.addTag({name: 'twitter:site', content: '@AngularUniv'});\n        this.meta.addTag({name: 'twitter:title', content: this.course.description});\n        this.meta.addTag({name: 'twitter:description', content: this.course.description});\n        this.meta.addTag({name: 'twitter:text:description', content: this.course.description});\n        this.meta.addTag({name: 'twitter:image', content: 'https://avatars3.githubusercontent.com/u/16628445?v=3&s=200'});\n\n\n        this.dataSource = new MatTableDataSource([]);\n\n        this.coursesService.findAllCourseLessons(this.course.id)\n            .subscribe(lessons => this.dataSource.data = lessons);\n\n    }\n\n\n}\n","<div class=\"course\">\n\n    <h2>{{course?.description}}</h2>\n\n    <img class=\"course-thumbnail mat-elevation-z10\" [src]=\"course?.iconUrl\">\n\n    <div class=\"spinner-container\" *ngIf=\"dataSource.data?.length == 0\">\n\n        <mat-spinner></mat-spinner>\n\n    </div>\n\n    <mat-table class=\"lessons-table mat-elevation-z8\"\n               [dataSource]=\"dataSource\" *appShellNoRender>\n\n        <ng-container matColumnDef=\"seqNo\">\n\n            <mat-header-cell *matHeaderCellDef>#</mat-header-cell>\n\n            <mat-cell *matCellDef=\"let lesson\">{{lesson.seqNo}}</mat-cell>\n\n        </ng-container>\n\n        <ng-container matColumnDef=\"description\">\n\n            <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\n\n            <mat-cell class=\"description-cell\"\n                      *matCellDef=\"let lesson\">{{lesson.description}}</mat-cell>\n\n        </ng-container>\n\n        <ng-container matColumnDef=\"duration\">\n\n            <mat-header-cell *matHeaderCellDef>Duration</mat-header-cell>\n\n            <mat-cell class=\"duration-cell\"\n                      *matCellDef=\"let lesson\">{{lesson.duration}}</mat-cell>\n\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n\n    </mat-table>\n\n\n\n</div>\n\n\n\n\n\n\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Course} from \"../model/course\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport {CourseDialogComponent} from \"../course-dialog/course-dialog.component\";\n\n@Component({\n    selector: 'courses-card-list',\n    templateUrl: './courses-card-list.component.html',\n    styleUrls: ['./courses-card-list.component.css']\n})\nexport class CoursesCardListComponent implements OnInit {\n\n    @Input()\n    courses: Course[];\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n\n    }\n\n    editCourse({description, longDescription, category}:Course) {\n\n        const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n\n        dialogConfig.data = {\n            description, longDescription, category\n        };\n\n        const dialogRef = this.dialog.open(CourseDialogComponent,\n            dialogConfig);\n\n\n        dialogRef.afterClosed().subscribe(\n            val => console.log(\"Dialog output:\", val)\n        );\n\n    }\n\n}\n\n\n\n\n\n\n\n\n\n","\n<mat-card *ngFor=\"let course of courses\" class=\"course-card mat-elevation-z10\">\n\n  <mat-card-header>\n\n    <mat-card-title>{{course.description}}</mat-card-title>\n\n  </mat-card-header>\n\n  <img mat-card-image [src]=\"course.iconUrl\">\n\n  <mat-card-content>\n    <p>{{course.longDescription}}</p>\n  </mat-card-content>\n\n  <mat-card-actions class=\"course-actions\">\n\n    <button mat-button class=\"mat-raised-button mat-primary\" [routerLink]=\"['/courses', course.id]\">\n      VIEW COURSE\n    </button>\n\n    <button mat-button class=\"mat-raised-button mat-accent\"\n            (click)=\"editCourse(course)\">\n      EDIT\n    </button>\n\n  </mat-card-actions>\n\n</mat-card>\n","import {\n    Directive, Inject, OnInit, PLATFORM_ID,\n    TemplateRef, ViewContainerRef\n} from \"@angular/core\";\nimport {isPlatformServer} from \"@angular/common\";\n\n@Directive({\n    selector: \"[appShellNoRender]\"\n})\nexport class AppShellNoRenderDirective implements OnInit {\n\n    constructor(@Inject(PLATFORM_ID) private platformId,\n                private templateRef: TemplateRef<any>,\n                private viewContainer: ViewContainerRef) {\n\n    }\n\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.viewContainer.clear();\n        }\n        else {\n            this.viewContainer.createEmbeddedView(this.templateRef);\n        }\n\n    }\n\n}\n","import {\n    Directive, Inject, OnInit, PLATFORM_ID,\n    TemplateRef, ViewContainerRef\n} from \"@angular/core\";\nimport {isPlatformServer} from \"@angular/common\";\n\n@Directive({\n    selector: \"[appShellRender]\"\n})\nexport class AppShellRenderDirective implements OnInit {\n\n    constructor(@Inject(PLATFORM_ID) private platformId,\n                private templateRef: TemplateRef<any>,\n                private viewContainer: ViewContainerRef) {\n\n    }\n\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.viewContainer.createEmbeddedView(this.templateRef);\n        }\n        else {\n            this.viewContainer.clear();\n        }\n\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Course} from \"../model/course\";\nimport {Observable} from \"rxjs\";\nimport {CoursesService} from \"../services/courses.service\";\nimport {map, tap} from 'rxjs/operators';\nimport {Title} from \"@angular/platform-browser\";\n\n@Component({\n    selector: 'home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    courses$: Observable<Course[]>;\n\n    constructor(private coursesService: CoursesService,\n                private title: Title) {\n\n    }\n\n    ngOnInit() {\n\n        this.title.setTitle(\"Angular University - All Courses\");\n\n        this.courses$ = this.coursesService.findAllCourses()\n            .pipe(\n                map(Object.values)\n            );\n    }\n\n}\n","\n<div class=\"courses-panel\" *appShellNoRender>\n\n    <mat-tab-group>\n\n        <mat-tab label=\"All Courses Available\">\n\n            <courses-card-list\n                    [courses]=\"courses$ | async\">\n\n            </courses-card-list>\n\n        </mat-tab>\n\n    </mat-tab-group>\n\n</div>\n\n","import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Course} from '../model/course';\nimport {Observable, of} from 'rxjs';\nimport {CoursesService} from './courses.service';\nimport {first, tap} from 'rxjs/operators';\nimport {isPlatformServer} from '@angular/common';\nimport {makeStateKey, TransferState} from \"@angular/platform-browser\";\n\n\n@Injectable()\nexport class CourseResolver implements Resolve<Course> {\n\n    constructor(\n        private coursesService: CoursesService,\n        private transferState:TransferState,\n        @Inject(PLATFORM_ID) private platformId) {\n\n    }\n\n    resolve(route: ActivatedRouteSnapshot,\n            state: RouterStateSnapshot): Observable<Course> {\n\n        const courseId = route.params['id'];\n\n        const COURSE_KEY = makeStateKey<Course>(\"courseKey-\" + courseId);\n\n        if (this.transferState.hasKey(COURSE_KEY)) {\n\n            const course = this.transferState.get(COURSE_KEY, null);\n\n            this.transferState.remove(COURSE_KEY);\n\n            return of(course);\n        }\n        else {\n            return this.coursesService.findCourseById(courseId)\n                .pipe(\n                    first(),\n                    tap(course => {\n                        if (isPlatformServer(this.platformId)) {\n                            this.transferState.set(COURSE_KEY, course);\n                        }\n                    })\n                );\n        }\n    }\n\n}\n","\n\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Course} from \"../model/course\";\nimport {Lesson} from \"../model/lesson\";\nimport {map} from 'rxjs/operators';\n\n\n\n@Injectable()\nexport class CoursesService {\n\n    static readonly API_URL = 'https://angular-universal-course-94047.firebaseio.com';\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    findCourseById(courseId: string): Observable<Course> {\n        return this.http.get<Course>(`${CoursesService.API_URL}/courses/${courseId}.json`);\n    }\n\n    findAllCourses(): Observable<Course[]> {\n        return this.http.get<Course[]>(`${CoursesService.API_URL}/courses.json`);\n    }\n\n    findAllCourseLessons(courseId:string): Observable<Lesson[]> {\n        return this.http.get<Lesson[]>(`${CoursesService.API_URL}/lessons/${courseId}.json`);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"names":["map","i0","HomeComponent","constructor","coursesService","title","ngOnInit","setTitle","courses$","findAllCourses","pipe","Object","values","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}